#!/bin/bash
#SBATCH --qos=debug
#SBATCH --nodes=34
#SBATCH --tasks-per-node=32
#SBATCH --time=10:00
#SBATCH --licenses=cscratch1
#SBATCH --constraint=haswell

# copy metadata server to current dir
rm unimos_server.conf Gorila_cred_conf gorilla.log gray_scott_pe_* conf* core cred sim.log iso.log

while [ ! -d ./vtkdataraw ]
do
    mkdir ./vtkdataraw
done

rm -rf ./vtkdataraw/*

# config the dataspace
PJSRC=
CONF_DIMS=1280
DSTASK=8
DSNODE=2
SIMTASK=1024
SIMNODE=32

source ~/.gorilla

#copy the adios config

sleep 1

srun -C haswell -N $DSNODE -n $DSTASK -c 8 --cpu_bind=cores --time=00:10:00 ./unimos_server ~/cworkspace/src/Gorilla/server/settings_gni.json &> gorilla.log &

while [ ! -f ./unimos_server.conf ]
do
    sleep 0.01
done

sleep 5

srun -C haswell -n 1 ./test/test_trigger_loader gni ~/cworkspace/src/Gorilla/server/trigger_test_insitu.json

# use sbcast for large scale job
#sbcast --compress=lz4 ./example/gray-scott-stg /tmp/gray-scott-stg

#srun -C haswell -N $SIMNODE -n $SIMTASK -c 1 --cpu_bind=cores /tmp/gray-scott-stg ~/cworkspace/src/Gorilla/example/simulation/settings.json gni &> sim.log 

srun -C haswell -N $SIMNODE -n $SIMTASK -c 1 --cpu_bind=cores ./example/gray-scott-stg ~/cworkspace/src/Gorilla/example/simulation/settings.json gni &> sim.log 

sleep 5

wait