#!/bin/bash
#SBATCH --qos=debug
#SBATCH --nodes=4
#SBATCH --time=10:00
#SBATCH --licenses=cscratch1
#SBATCH --constraint=haswell

# copy metadata server to current dir
rm unimos_server.log grayscott_dynamic.log

#assume we are at the build dir
#start the server
srun -C haswell -N 2 -n 16 -c 8 ./unimos_server ~/cworkspace/src/Gorilla/server/settings_gs_gni.json &> unimosserver.log &


#make sure the server load the pipeline
result=0
while [ $result -ne 16 ]
do
    result=$(cat unimosserver.log | grep "init server ok" | wc -l)
    echo "$result server ok"
    sleep 1  
done

sleep 1

#export ANATYPE=S_HIGH
#export ANATYPE=S_LOW
#export ANATYPE=V_LHL
#export ANATYPE=V_HLH
#export ANATYPE=V_MULTIPLE

srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_10.json gni alltightly &> alltightly.log 
#srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_10.json gni allloosely &> allloosely.log 
#srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_10.json gni dynamicNaive &> dynamicNaive.log
#srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_10.json gni dynamicEstimation &> dynamicEstimation.log

# the server may need longer time to finish to process the in-staging tasks
wait