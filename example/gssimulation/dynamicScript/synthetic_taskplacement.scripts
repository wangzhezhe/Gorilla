#!/bin/bash
#SBATCH --qos=debug
#SBATCH --nodes=4
#SBATCH --time=10:00
#SBATCH --licenses=cscratch1
#SBATCH --constraint=haswell
#SBATCH --account=m2956


#assume we are at the build dir
#start the server
srun -C haswell -N 2 -n 16 -c 8 ./unimos_server ~/cworkspace/src/Gorilla/server/settings_gs_gni.json &> unimosserver.log &


#make sure the server load the pipeline
result=0
while [ $result -ne 16 ]
do
    result=$(cat unimosserver.log | grep "init server ok" | wc -l)
    echo "$result server ok"
    sleep 1  
done

sleep 1

#set associated env to start the synthetic ana
#export ANATYPE=S_HIGH
#export ANATYPE=S_LOW
#export ANATYPE=V_LHL
#export ANATYPE=V_HLH
#export ANATYPE=V_MULTIPLE
export ANATYPE=V_INCONSISTENCY

srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_synthetic.json gni alltightly synthetic &> alltightly_synthetic.log 
#srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_synthetic.json gni allloosely synthetic &> allloosely_synthetic.log 
#srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_synthetic.json gni dynamicNaive synthetic &> dynamicNaive_synthetic.log 
#srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_synthetic.json gni dynamicEstimation synthetic &> dynamicEstimation_synthetic.log 
#srun -C haswell -N 2 -n 32 -c 4 -l ./example/gray-scott-dynamic ~/cworkspace/src/Gorilla/example/gssimulation/settings_synthetic.json gni dynamicEstimationAdjust synthetic &> dynamicEstimationAdjust_synthetic.log 





# the server may need longer time to finish to process the in-staging tasks
wait